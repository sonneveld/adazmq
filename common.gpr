abstract project Common is

   type On_Off_Type is ("on", "off");


   --  Builder

   package Builder is
   end Builder;


   --  Compiler

   Common_Compiler_Switches := (
      "-fstack-check",  -- Generate stack checking code
      "-g",             -- Generate debugging information
      "-Og",            -- Some optimisation, but won't interfere with debugging.
      --"-v",             --  show commands generated by gcc
      "-gnat2012",      --  Ada 2012 mode
      "-gnata",         --  Assertions enabled
      "-gnateE",        --  Generate extra information in exception messages.
      "-gnatf",         --  Full error messages
      "-gnato",         --  Enable numeric overflow checking
      "-gnatQ",         --  Don't quit, write ali/tree file even if compile errors (will possibly show more errors)
      "-gnatVa",        --  turn on all validity checking options
      "-gnatwa"         --  turn on all basic info/warnings
      --  "-gnatwU"     --  turn off warnings for unused entity
   );

   Style_Compiler_Switches := (
      --  "-gnaty3abBcefhiklM120nOprt"
      "-gnatyaBknOpr"
   );

   Loose_Style_Compiler_Switches := (
      "-gnatyaBknOpr"
   );

   Warnings_As_Errors_Compiler_Switches := (
      --  "-gnatwe"                    --  treat all warnings (but not info) as errors
   );

   --  Support -Xallow_deprecated=[on|off]
   Allow_Deprecated_Option : On_Off_Type := external ("allow_deprecated", "off");
   case Allow_Deprecated_Option is
     when "off" => Common_Compiler_Switches := Common_Compiler_Switches & "-gnateDALLOW_DEPRECATED=false";
     when "on"  => Common_Compiler_Switches := Common_Compiler_Switches & "-gnateDALLOW_DEPRECATED=true";
   end case;

   Test_Compiler_Switches := Common_Compiler_Switches;
   Generated_Compiler_Switches := Common_Compiler_Switches & Warnings_As_Errors_Compiler_Switches & Loose_Style_Compiler_Switches;
   General_Compiler_Switches := Common_Compiler_Switches & Warnings_As_Errors_Compiler_Switches & Style_Compiler_Switches;

   package Compiler is
      for Default_Switches ("ada") use General_Compiler_Switches;
      for Default_Switches ("C") use ("-Og", "-Wall", "-W");
   end Compiler;


   --  Binder

   Binder_Switches := ("-E", "-static");
   Debug_Binder_Switches := Binder_Switches & ( "-u50");

   package Binder is
      for Default_Switches ("ada") use Binder_Switches;
   end Binder;


   --  Linker

   Linker_Switches := ("-g");

   --  enable on OSX to enable atos symbolic conversion
   Osx_Support_Atos : On_Off_Type := external ("osx_support_atos", "off");
   case Osx_Support_Atos is
     when "on"  => Linker_Switches := Linker_Switches & ("-Wl,-no_pie");
     when "off" => null;
   end case;

   package Linker is
      For Default_Switches ("ada") use Linker_Switches;
   end Linker;


   --  Others

   package Ide is
      for Compiler_Command ("c") use "gcc";
   end Ide;

   package Pretty_Printer is
      for Default_Switches ("ada") use ("-M120", "-rnb");
   end Pretty_Printer;

end Common;
